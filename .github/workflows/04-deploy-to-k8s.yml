name: Deploy to Kubernetes

on:
  workflow_dispatch: {}
  workflow_run:
    workflows: [Publish Helm chart]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set Kubernetes Config
        run: |
          CONFIG_FILE=$(mktemp)
          echo "${{ secrets.KUBECONFIG }}" > $CONFIG_FILE
          echo "KUBECONFIG=${CONFIG_FILE}" >> $GITHUB_ENV
      - name: Add Helm repo
        run: |
          helm repo add kbase https://jackwilde.github.io/kbase
          helm repo update
      - name: Deploy with Helm
        run: |
          values=$(cat <<EOF
          web:
            django:
              image:
                tag: "latest"
              settings:
                secret_key: "${{ secrets.SECRET_KEY }}" # Secure
                site_url: "https://${{ secrets.SITE_URL }}"
                email_host: "${{ secrets.EMAIL_HOST }}"
                email_host_user: "${{ secrets.EMAIL_HOST_USER }}"
                email_host_password: "${{ secrets.EMAIL_HOST_PASSWORD }}"
                default_from_email: "${{ secrets.DEFAULT_FROM_EMAIL }}"
          postgres:
            storage:
              storageClass: "managed-csi"
            settings:
              postgres_db: "${{ secrets.POSTGRES_DB }}"
              postgres_user: "${{ secrets.POSTGRES_USER }}"
              postgres_password: "${{ secrets.POSTGRES_PASSWORD }}"
          
          ingress:
            enabled: true
            className: "nginx"
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
              nginx.ingress.kubernetes.io/rewrite-target: /
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            hosts:
              - host: "${{ secrets.SITE_URL }}"
                paths:
                  - path: /
                    pathType: Prefix
            tls:
              hosts:
                - "${{ secrets.SITE_URL }}"
              secretName: "${{ secrets.SITE_URL }}-tls"
          
          networkPolicy:
            enabled: true
            ingressNamespace: ingress-nginx
          EOF
          )
          
          echo "$values" | \
          helm upgrade --install --create-namespace --reuse-values \
            kbase kbase/kbase \
            --namespace kbase \
            --values -

      - name: Delete Config
        run: rm ${{ env.KUBECONFIG}}
          
