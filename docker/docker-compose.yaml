name: kbase

services:
  init-static:
    # Copies the latest static files to a volume for Nginx to serve
    build:
      context: ../
      dockerfile: docker/django/Dockerfile
    platform: linux/amd64
    restart: on-failure:3
    pull_policy: always
    entrypoint: ["/bin/bash", "-c", "cp -pr static/* /static"]
    volumes:
      - "static:/static"

  django:
    build:
      context: ../
      dockerfile: docker/django/Dockerfile
    platform: linux/amd64
    depends_on:
      - db
    container_name: ${COMPOSE_PROJECT_NAME}-django
    pull_policy: always
    restart: unless-stopped
    user: django:django
    networks:
      - backend
    environment:
      ALLOWED_HOST: ${COMPOSE_PROJECT_NAME}-django
      DEBUG: False
      TIME_ZONE: GMT
      POSTGRES_PORT: 5432
      POSTGRES_HOST: ${COMPOSE_PROJECT_NAME}-postgres
      SITE_URL: "http://localhost:8080"
    env_file:
      - .env

  db:
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    image: postgres:17
    user: postgres:postgres
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    env_file:
      - .env
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    image: nginx:1.27.3-alpine
    depends_on:
      init-static:
        condition: service_completed_successfully
    ports:
      - "8443:443"
      - "8080:80"
    volumes:
      - "static:/usr/share/nginx/html/static/"
      - "./nginx/conf-available/:/etc/nginx/conf-available/"
      - "./nginx/docker-entrypoint.d:/docker-entrypoint.d/"
      - "nginx-conf:/etc/nginx/conf-enabled/"
    networks:
      - frontend
      - backend

volumes:
  postgres-data: {}
  static: {}
  nginx-conf: {}

networks:
  frontend: {}
  backend: {}

